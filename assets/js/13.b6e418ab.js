(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{203:function(t,a,s){"use strict";s.r(a);var n=s(0),r=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"基本排序算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本排序算法","aria-hidden":"true"}},[t._v("#")]),t._v(" 基本排序算法")]),t._v(" "),s("p",[t._v("在计算机科学中，一个排序算法是一种能将一串数据依照特定的排列方式进行排列的一种算法。")]),t._v(" "),s("p",[t._v("这里简单的介绍三种最基本的排序，分别是：冒泡排序、选择排序以及插入排序")]),t._v(" "),s("h4",{attrs:{id:"排序的过程中，经常要用到交换元素位置，故抽离为公共函数-swap。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#排序的过程中，经常要用到交换元素位置，故抽离为公共函数-swap。","aria-hidden":"true"}},[t._v("#")]),t._v(" 排序的过程中，经常要用到交换元素位置，故抽离为公共函数 "),s("code",[t._v("swap")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("// 交换位置")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("swap")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" index1"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" index2"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" temp "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("index1"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    arr"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("index1"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("index2"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    arr"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("index2"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" temp"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"冒泡排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#冒泡排序","aria-hidden":"true"}},[t._v("#")]),t._v(" 冒泡排序")]),t._v(" "),s("p",[t._v("冒泡排序是最简单的排序，一一对比相邻的两个数，顺序不对就交换过来，这样子，每一轮最大的值总会慢慢的被交换到最右侧。所以才会叫冒泡排序")]),t._v(" "),s("h4",{attrs:{id:"描述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#描述","aria-hidden":"true"}},[t._v("#")]),t._v(" 描述")]),t._v(" "),s("p",[t._v("假设数组长度为 n")]),t._v(" "),s("ul",[s("li",[t._v("比较相邻的两个数，如果第 1 个大于第 2 个，就交换位置")]),t._v(" "),s("li",[t._v("重复第 1 步，一轮下来最大值被交换到第 n 个位置，也就是最右侧")]),t._v(" "),s("li",[t._v("开启新一轮，重复 1~2 步，最大值会被冒泡到第 n-1 个位置")]),t._v(" "),s("li",[t._v("重复上述步骤，直到所有都排序好")])]),t._v(" "),s("h4",{attrs:{id:"例子："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#例子：","aria-hidden":"true"}},[t._v("#")]),t._v(" 例子：")]),t._v(" "),s("p",[t._v("对 3, 1, 5, 2, 4 进行排序")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("3")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("5")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("2")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("4")]),t._v("  "),s("span",{attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("交换位置\n"),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("3")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("5")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("2")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("4")]),t._v("  "),s("span",{attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("不变\n"),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("3")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("2")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("5")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("4")]),t._v("  "),s("span",{attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("交换位置\n"),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("3")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("2")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("4")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("5")]),t._v("  "),s("span",{attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("4")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("交换位置"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("第一轮结束\n"),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("3")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("2")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("4")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("5")]),t._v("  "),s("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("不变\n"),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("2")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("3")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("4")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("5")]),t._v("  "),s("span",{attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("交换位置\n"),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("2")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("3")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("4")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("5")]),t._v("  "),s("span",{attrs:{class:"token operator"}},[t._v("...")]),t._v("依次对比\n"),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("2")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("3")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("4")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("5")]),t._v("  "),s("span",{attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("2")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("3")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("4")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token number"}},[t._v("5")]),t._v("  "),s("span",{attrs:{class:"token operator"}},[t._v("...")]),t._v(" 结束\n")])])]),s("h4",{attrs:{id:"代码实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码实现","aria-hidden":"true"}},[t._v("#")]),t._v(" 代码实现")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("// 冒泡排序")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("bubbleSort")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("array"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" array"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{attrs:{class:"token operator"}},[t._v("--")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" hasSwap "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token boolean"}},[t._v("false")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" j "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),s("span",{attrs:{class:"token operator"}},[t._v("<=")]),t._v(" i"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),s("span",{attrs:{class:"token operator"}},[t._v("++")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("array"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" array"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{attrs:{class:"token function"}},[t._v("swap")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("array"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" j"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" j "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                hasSwap "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token boolean"}},[t._v("true")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v("hasSwap"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{attrs:{class:"token comment"}},[t._v("// 这里用于优化，如果某一轮之后，没有进行任何交换，说明已经排序完成了，所以退出循环")]),t._v("\n            "),s("span",{attrs:{class:"token keyword"}},[t._v("break")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"效果演示"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#效果演示","aria-hidden":"true"}},[t._v("#")]),t._v(" 效果演示")]),t._v(" "),s("iframe",{staticClass:"preview-page",staticStyle:{border:"1px solid #ccc","margin-top":"30px"},attrs:{src:"https://global.chen4342024.com/algorithm/?key=bubble",frameborder:"0",width:"375px",height:"667px"}}),t._v(" "),s("h4",{attrs:{id:"小结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小结","aria-hidden":"true"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),s("p",[t._v("冒泡算法是比较慢的排序之一，也是最容易实现的算法之一。")]),t._v(" "),s("h5",{attrs:{id:"复杂度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#复杂度","aria-hidden":"true"}},[t._v("#")]),t._v(" 复杂度")]),t._v(" "),s("ul",[s("li",[t._v("稳定性：稳定")]),t._v(" "),s("li",[t._v("时间复杂度： 平均 O(n^2) 、 最坏 O(n^2) 、最好 O(n)")]),t._v(" "),s("li",[t._v("额外空间复杂度 O(1)")])]),t._v(" "),s("h2",{attrs:{id:"选择排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#选择排序","aria-hidden":"true"}},[t._v("#")]),t._v(" 选择排序")]),t._v(" "),s("p",[t._v("选择排序是指每一轮从数组中取出最小值，然后跟第一个元素交换位置。然后再找出第二个最小值，跟第二个元素交换位置，。。。以此类推。直到倒数第二个位置")]),t._v(" "),s("h4",{attrs:{id:"例子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#例子","aria-hidden":"true"}},[t._v("#")]),t._v(" 例子")]),t._v(" "),s("p",[t._v("对 "),s("code",[t._v("3, 1, 5, 2, 4")]),t._v(" 进行排序")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("// 这里只展示每一轮的结果")]),t._v("\n"),s("span",{attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("4")]),t._v("   "),s("span",{attrs:{class:"token comment"}},[t._v("//开始")]),t._v("\n"),s("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("4")]),t._v("   "),s("span",{attrs:{class:"token comment"}},[t._v("//第 1 轮")]),t._v("\n"),s("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("4")]),t._v("   "),s("span",{attrs:{class:"token comment"}},[t._v("//第 2 轮")]),t._v("\n"),s("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("4")]),t._v("   "),s("span",{attrs:{class:"token comment"}},[t._v("//第 3 轮")]),t._v("\n"),s("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("4")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("5")]),t._v("   "),s("span",{attrs:{class:"token comment"}},[t._v("//第 4 轮")]),t._v("\n")])])]),s("h4",{attrs:{id:"代码实现-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码实现-2","aria-hidden":"true"}},[t._v("#")]),t._v(" 代码实现")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("// 选择排序从开头开始，找出最小的值，放在第一个位置")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 有点类似打扑克拍的时候，抽取每一张最小的放在最左边")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("selectSort")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("array"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" array"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{attrs:{class:"token operator"}},[t._v("++")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" minIndex "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" i"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" min "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" array"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" j "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" i "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" array"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),s("span",{attrs:{class:"token operator"}},[t._v("++")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("array"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" min"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                min "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" array"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                minIndex "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" j"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{attrs:{class:"token function"}},[t._v("swap")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("array"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" minIndex"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"效果演示-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#效果演示-2","aria-hidden":"true"}},[t._v("#")]),t._v(" 效果演示")]),t._v(" "),s("iframe",{staticClass:"preview-page",staticStyle:{border:"1px solid #ccc","margin-top":"30px"},attrs:{src:"https://global.chen4342024.com/algorithm/?key=select",frameborder:"0",width:"375px",height:"667px"}}),t._v(" "),s("h5",{attrs:{id:"复杂度-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#复杂度-2","aria-hidden":"true"}},[t._v("#")]),t._v(" 复杂度")]),t._v(" "),s("ul",[s("li",[t._v("稳定性：不稳定")]),t._v(" "),s("li",[t._v("时间复杂度： O(n^2)")]),t._v(" "),s("li",[t._v("额外空间复杂度 O(1)")])]),t._v(" "),s("h2",{attrs:{id:"插入排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#插入排序","aria-hidden":"true"}},[t._v("#")]),t._v(" 插入排序")]),t._v(" "),s("p",[t._v("插入排序的思想是，依次从数组中未排序的部分，取出数据，然后插入到已排序的部分。直到清空未排序的部分")]),t._v(" "),s("h4",{attrs:{id:"描述-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#描述-2","aria-hidden":"true"}},[t._v("#")]),t._v(" 描述")]),t._v(" "),s("p",[t._v("假设数组长度为 n , 从第 2 项开始")]),t._v(" "),s("ul",[s("li",[t._v("从第一个元素开始，该元素可以认为已经被排序；")]),t._v(" "),s("li",[t._v("取出下一个元素，在已经排序的元素序列中从后向前扫描；")]),t._v(" "),s("li",[t._v("如果该元素大于新元素，将该元素移到下一位置；")]),t._v(" "),s("li",[t._v("重复步骤 3，直到找到已排序的元素小于或者等于新元素的位置；")]),t._v(" "),s("li",[t._v("将新元素插入到该位置后；")]),t._v(" "),s("li",[t._v("重复步骤 2~5。")])]),t._v(" "),s("h4",{attrs:{id:"代码实现-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码实现-3","aria-hidden":"true"}},[t._v("#")]),t._v(" 代码实现")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("insertSort")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("array"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" array"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{attrs:{class:"token operator"}},[t._v("++")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" temp "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" array"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" j "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" i"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("j "),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" array"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j "),s("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" temp"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{attrs:{class:"token comment"}},[t._v("// 将所有大于temp的往右移")]),t._v("\n            array"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" array"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j "),s("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            j"),s("span",{attrs:{class:"token operator"}},[t._v("--")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        array"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" temp"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"效果演示-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#效果演示-3","aria-hidden":"true"}},[t._v("#")]),t._v(" 效果演示")]),t._v(" "),s("iframe",{staticClass:"preview-page",staticStyle:{border:"1px solid #ccc","margin-top":"30px"},attrs:{src:"https://global.chen4342024.com/algorithm/?key=insert",frameborder:"0",width:"375px",height:"667px"}}),t._v(" "),s("h5",{attrs:{id:"复杂度-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#复杂度-3","aria-hidden":"true"}},[t._v("#")]),t._v(" 复杂度")]),t._v(" "),s("ul",[s("li",[t._v("稳定性：稳定")]),t._v(" "),s("li",[t._v("时间复杂度：平均 O(n^2) 、 最坏 O(n^2) 、最好 O(n)")]),t._v(" "),s("li",[t._v("额外空间复杂度 O(1)")])]),t._v(" "),s("h2",{attrs:{id:"效果演示（汇总）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#效果演示（汇总）","aria-hidden":"true"}},[t._v("#")]),t._v(" 效果演示（汇总）")]),t._v(" "),s("iframe",{staticClass:"preview-page",staticStyle:{border:"1px solid #ccc","margin-top":"30px"},attrs:{src:"https://global.chen4342024.com/algorithm/?key=all",frameborder:"0",width:"375px",height:"667px"}}),t._v(" "),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("p",[t._v("这三种最基本的排序算法的复杂度非常相似，从理论上来说，它们的执行效率也应该差不多。")]),t._v(" "),s("p",[t._v("在实际使用中，如果需要排序的数据比较多，是不推荐使用这 3 种排序的。毕竟他们的效率都不太理想")]),t._v(" "),s("p",[t._v("在实际应用中，应该选择高级排序算法： 快速排序 ...")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("在随机生成数据测试的时候，发现很多时候，插入排序要快于冒泡排序以及选择排序。大概是冒泡/选择排序的快 1 倍")]),t._v(" "),s("p",[t._v("这是因为 插入排序需要比较的次数是 "),s("code",[t._v("1+2+3+..+n = n * (n-1) /2")]),t._v(",这是最坏的情况，大部分时候并不需要全部比较，所以平均下来只需要 "),s("code",[t._v("n*(n-1)/4")])]),t._v(" "),s("p",[t._v("而冒泡/选择排序都需要"),s("code",[t._v("n * (n-1)/2")]),t._v(",所以平均下来，插入排序大概是冒泡/选择排序的快 1 倍")])])])}],!1,null,null,null);r.options.__file="baseSort.md";a.default=r.exports}}]);