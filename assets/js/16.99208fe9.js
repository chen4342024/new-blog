(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{200:function(t,a,s){"use strict";s.r(a);var n=s(0),v=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"js-最佳实践"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js-最佳实践","aria-hidden":"true"}},[t._v("#")]),t._v(" js 最佳实践")]),t._v(" "),s("h2",{attrs:{id:"可维护性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#可维护性","aria-hidden":"true"}},[t._v("#")]),t._v(" 可维护性")]),t._v(" "),s("h3",{attrs:{id:"什么是可维护的代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是可维护的代码","aria-hidden":"true"}},[t._v("#")]),t._v(" 什么是可维护的代码")]),t._v(" "),s("ul",[s("li",[t._v("可理解性：他人可以接手代码并理解它")]),t._v(" "),s("li",[t._v("直观性 : 代码逻辑清晰")]),t._v(" "),s("li",[t._v("可适应性 ： 代码以一种数据变化不要求重写的方法编写")]),t._v(" "),s("li",[t._v("可扩展性 ：代码已考虑到未来允许对核心功能进行扩展")]),t._v(" "),s("li",[t._v("可调试性　：　出错时，方便定位问题所在")])]),t._v(" "),s("h2",{attrs:{id:"代码约定"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码约定","aria-hidden":"true"}},[t._v("#")]),t._v(" 代码约定")]),t._v(" "),s("h4",{attrs:{id:"可读性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#可读性","aria-hidden":"true"}},[t._v("#")]),t._v(" 可读性")]),t._v(" "),s("ul",[s("li",[t._v("代码格式化")]),t._v(" "),s("li",[t._v("适当添加注释")]),t._v(" "),s("li",[t._v("函数与方法")]),t._v(" "),s("li",[t._v("大段代码")]),t._v(" "),s("li",[t._v("复杂算法")]),t._v(" "),s("li",[t._v("Hack，对浏览器的一些 hack")])]),t._v(" "),s("h4",{attrs:{id:"变量与函数命名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量与函数命名","aria-hidden":"true"}},[t._v("#")]),t._v(" 变量与函数命名")]),t._v(" "),s("ul",[s("li",[t._v("变量名应为名词")]),t._v(" "),s("li",[t._v("函数名应为动词开始")]),t._v(" "),s("li",[t._v("变量和函数应使用合乎逻辑的名字")])]),t._v(" "),s("h4",{attrs:{id:"变量类型透明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量类型透明","aria-hidden":"true"}},[t._v("#")]),t._v(" 变量类型透明")]),t._v(" "),s("p",[t._v("由于 js 中的变量是松散类型的，很容易就忘记变量所应包含的数据类型。\n解决方案有三种：")]),t._v(" "),s("ol",[s("li",[t._v("初始化时候，初始化一个值，暗示它将来如何使用")]),t._v(" "),s("li",[t._v("命名前添加字符 ， 例如加 o 表示对象。缺点是使代码不直观")]),t._v(" "),s("li",[t._v("每个变量使用类型注释。")])]),t._v(" "),s("p",[t._v("以上三种方法，不知何种才是好一点的做法。")]),t._v(" "),s("h2",{attrs:{id:"松散耦合"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#松散耦合","aria-hidden":"true"}},[t._v("#")]),t._v(" 松散耦合")]),t._v(" "),s("ul",[s("li",[t._v("解耦 HTML / javascript\nHTML 呈现应尽可能与 javascript 分离。更改行为只需要在 js 中进行，更改标记则只在 html 文件中。")]),t._v(" "),s("li",[t._v('解耦 CSS / javascript\n尽量不在 js 中更改 css，如 element.style.color="red";而应该改为用 class')]),t._v(" "),s("li",[t._v("解耦应用逻辑 / 事件处理程序")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("//事件处理程序")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("handlerClick")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" target "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" event"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" value "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" target"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    dosomething"),s("span",{attrs:{class:"token operator"}},[t._v("...")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("//应用逻辑")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("可更改为:")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("//事件处理程序")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("handlerClick")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" target "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" event"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" value "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" target"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token function"}},[t._v("xxx")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("//应用逻辑")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("xxx")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    dosomething "),s("span",{attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("这样解耦应用逻辑与事件处理程序有几个好处")]),t._v(" "),s("p",[t._v("首先，让你可以更容易更改触发特定过程的事件，例如原先由鼠标点击触发，可以很方便改为用按键触发")]),t._v(" "),s("p",[t._v("其次，方便进行单元测试.")]),t._v(" "),s("h4",{attrs:{id:"解耦应用逻辑-事件处理程序原则："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解耦应用逻辑-事件处理程序原则：","aria-hidden":"true"}},[t._v("#")]),t._v(" 解耦应用逻辑 / 事件处理程序原则：")]),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("勿将 event 对象传给其他方法，只传来自 event 对象中所需的数据")]),t._v(" "),s("li",[t._v("任何可以在应用层面的动作都应该可以在不执行事件的情况下进行")]),t._v(" "),s("li",[t._v("任何事件处理程序都应该处理事件，然后将处理转交给应用逻辑")])])]),t._v(" "),s("h2",{attrs:{id:"编程实践"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编程实践","aria-hidden":"true"}},[t._v("#")]),t._v(" 编程实践")]),t._v(" "),s("h4",{attrs:{id:"尊重对象所有权"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#尊重对象所有权","aria-hidden":"true"}},[t._v("#")]),t._v(" 尊重对象所有权")]),t._v(" "),s("p",[t._v("永远不要修改不是由你所有的对象")]),t._v(" "),s("h4",{attrs:{id:"避免全局量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#避免全局量","aria-hidden":"true"}},[t._v("#")]),t._v(" 避免全局量")]),t._v(" "),s("p",[t._v("只声明单一的全局变量，作为一个容器，其中定义了其他对象。这种方式叫做命名空间。")]),t._v(" "),s("p",[t._v("命名空间有助于确保代码可以在同一个页面上与其他代码以无害的方式一起工作")]),t._v(" "),s("h4",{attrs:{id:"避免与-null-比较"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#避免与-null-比较","aria-hidden":"true"}},[t._v("#")]),t._v(" 避免与 null 比较")]),t._v(" "),s("p",[t._v("如果看到了与 null 比较的代码，首先需要确定的是，是否该 if 语句仅仅判断 null 就行。大多数情况下，我们是想要判断是否是确定的类型。")]),t._v(" "),s("p",[t._v("null 比较越少，我们越容易确定代码的目的，以消除不必要的错误")]),t._v(" "),s("h4",{attrs:{id:"使用常量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用常量","aria-hidden":"true"}},[t._v("#")]),t._v(" 使用常量")]),t._v(" "),s("p",[t._v("关键在于将数据和使用它的逻辑进行分离。")]),t._v(" "),s("p",[t._v("以下情况应使用常量：")]),t._v(" "),s("ul",[s("li",[t._v("多处用到的值都应该抽取到一个常量。这在修改的时候也不会容易修改漏掉")]),t._v(" "),s("li",[t._v("用户界面字符串：用于显示给用户看的字符串，都应该抽取出来方便国际化")]),t._v(" "),s("li",[t._v("URLs ： 在 web 应用中，资源位置容易变更，所以推荐使用常量")]),t._v(" "),s("li",[t._v("任何可能会更改的值")])]),t._v(" "),s("h3",{attrs:{id:"性能（待补充）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#性能（待补充）","aria-hidden":"true"}},[t._v("#")]),t._v(" 性能（待补充）")])])}],!1,null,null,null);v.options.__file="bestPractice.md";a.default=v.exports}}]);